
services:

 #Infra services
  cassandra-node-0:
    image: cassandra
    environment:
      - CASSANDRA_SEEDS=cassandra-node-0,cassandra-node-1,cassandra-node-2
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=dc1
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
    ports:
      - "7000:7000"   # 노드간 클러스터 내부 통신
      - "7001:7001"   # 노드간 보안 통신에 사용
      - "9042:9042"   # CQL 클라이언트와 통신
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50

  cassandra-node-1:
    image: cassandra
    environment:
      - CASSANDRA_SEEDS=cassandra-node-0,cassandra-node-1,cassandra-node-2
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=dc1
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
    ports:
      - "17000:7000"
      - "17001:7001"
      - "19042:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50

  cassandra-node-2:
    image: cassandra
    environment:
      - CASSANDRA_SEEDS=cassandra-node-0,cassandra-node-1,cassandra-node-2
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=dc1
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
    ports:
      - "27000:7000"
      - "27001:7001"
      - "29042:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50

  myredis:
    image: redis
    restart: always
    hostname: myredis
    ports:
      - "6370:6379"
    depends_on:
      cassandra-node-0:
        condition: service_healthy
      cassandra-node-1:
        condition: service_healthy
      cassandra-node-2:
        condition: service_healthy

  mysql-server:
    image: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=my_db
    ports:
      - "3308:3306"
    depends_on:
      - myredis
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1234" ]
      interval: 5s
      timeout: 5s
      retries: 10

#kafaka
  # Zookeeper 3개 (클러스터)
  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper1
    ports:
      - "22181:2181"      # 외부 접속용 포트 (필요하면 열기)
#      - "2888:2888"       # 클러스터 팔로워와 리더 통신
#      - "3888:3888"       # 리더 선출 통신
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_ELECTION_PORT_BIND_RETRY: 10
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper2
    ports:
      - "22182:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_ELECTION_PORT_BIND_RETRY: 10
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5


  zookeeper3:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper3
    ports:
      - "22183:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_ELECTION_PORT_BIND_RETRY: 10
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka 3개 (브로커)
  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9091:9092"    # 외부 접속용 포트 매핑 (호스트:컨테이너)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:9091
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_LOG_RETENTION_HOURS: 168


  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_LOG_RETENTION_HOURS: 168

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_LOG_RETENTION_HOURS: 168


# #Domain Services
  member-service:
    restart: always
    build:
      context: ./member-service
    ports:
      - "8081:8080"
    depends_on:
      mysql-server:
        condition: service_healthy

  payment-service:
    build:
      context: ./payment-service
    ports:
      - "8082:8080"
    depends_on:
      mysql-server:
        condition: service_healthy

  delivery-service:
    build:
      context: ./delivery-service
    ports:
      - "8083:8080"
    depends_on:
      mysql-server:
        condition: service_healthy

  search-service:
    build:
      context: ./search-service
    ports:
      - "8084:8080"
    depends_on:
      mysql-server:
        condition: service_healthy

  catalog-service:
    build:
      context: ./catalog-service
    ports:
      - "8085:8080"
    depends_on:
      mysql-server:
        condition: service_healthy

  order-service:
    build:
      context: ./order-service
    ports:
      - "8086:8080"
    depends_on:
      mysql-server:
        condition: service_healthy
